# Generated by Django 3.1.2 on 2020-10-12 13:17

from django.conf import settings
import django.contrib.sites.managers
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone
import newsletter.models
import newsletter.utils
import sorl.thumbnail.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('sites', '0002_alter_domain_unique'),
    ]

    operations = [
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='title')),
                ('slug', models.SlugField(verbose_name='slug')),
                ('date_create', models.DateTimeField(auto_now_add=True, verbose_name='created')),
                ('date_modify', models.DateTimeField(auto_now=True, verbose_name='modified')),
            ],
            options={
                'verbose_name': 'message',
                'verbose_name_plural': 'messages',
            },
        ),
        migrations.CreateModel(
            name='Newsletter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='newsletter title')),
                ('slug', models.SlugField(unique=True)),
                ('email', models.EmailField(help_text='Sender e-mail', max_length=254, verbose_name='e-mail')),
                ('sender', models.CharField(help_text='Sender name', max_length=200, verbose_name='sender')),
                ('visible', models.BooleanField(db_index=True, default=True, verbose_name='visible')),
                ('send_html', models.BooleanField(default=True, help_text='Whether or not to send HTML versions of e-mails.', verbose_name='send html')),
                ('site', models.ManyToManyField(default=newsletter.utils.get_default_sites, to='sites.Site')),
            ],
            options={
                'verbose_name': 'newsletter',
                'verbose_name_plural': 'newsletters',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('on_site', django.contrib.sites.managers.CurrentSiteManager()),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_field', models.CharField(blank=True, db_column='name', help_text='optional', max_length=30, null=True, verbose_name='name')),
                ('email_field', models.EmailField(blank=True, db_column='email', db_index=True, max_length=254, null=True, verbose_name='e-mail')),
                ('ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP address')),
                ('create_date', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('activation_code', models.CharField(default=newsletter.utils.make_activation_code, max_length=40, verbose_name='activation code')),
                ('subscribed', models.BooleanField(db_index=True, default=False, verbose_name='subscribed')),
                ('subscribe_date', models.DateTimeField(blank=True, null=True, verbose_name='subscribe date')),
                ('unsubscribed', models.BooleanField(db_index=True, default=False, verbose_name='unsubscribed')),
                ('unsubscribe_date', models.DateTimeField(blank=True, null=True, verbose_name='unsubscribe date')),
                ('newsletter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='newsletter.newsletter', verbose_name='newsletter')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'subscription',
                'verbose_name_plural': 'subscriptions',
                'unique_together': {('user', 'email_field', 'newsletter')},
            },
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('publish_date', models.DateTimeField(blank=True, db_index=True, default=django.utils.timezone.now, null=True, verbose_name='publication date')),
                ('publish', models.BooleanField(db_index=True, default=True, help_text='Publish in archive.', verbose_name='publish')),
                ('prepared', models.BooleanField(db_index=True, default=False, editable=False, verbose_name='prepared')),
                ('sent', models.BooleanField(db_index=True, default=False, editable=False, verbose_name='sent')),
                ('sending', models.BooleanField(db_index=True, default=False, editable=False, verbose_name='sending')),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='newsletter.message', verbose_name='message')),
                ('newsletter', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='newsletter.newsletter', verbose_name='newsletter')),
                ('subscriptions', models.ManyToManyField(blank=True, db_index=True, help_text='If you select none, the system will automatically find the subscribers for you.', limit_choices_to={'subscribed': True}, to='newsletter.Subscription', verbose_name='recipients')),
            ],
            options={
                'verbose_name': 'submission',
                'verbose_name_plural': 'submissions',
            },
        ),
        migrations.AddField(
            model_name='message',
            name='newsletter',
            field=models.ForeignKey(default=newsletter.models.get_default_newsletter, on_delete=django.db.models.deletion.CASCADE, to='newsletter.newsletter', verbose_name='newsletter'),
        ),
        migrations.AlterUniqueTogether(
            name='message',
            unique_together={('slug', 'newsletter')},
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sortorder', models.PositiveIntegerField(blank=True, help_text='Sort order determines the order in which articles are concatenated in a post.', verbose_name='sort order')),
                ('title', models.CharField(max_length=200, verbose_name='title')),
                ('text', models.TextField(verbose_name='text')),
                ('url', models.URLField(blank=True, null=True, verbose_name='link')),
                ('image', sorl.thumbnail.fields.ImageField(blank=True, null=True, upload_to='newsletter/images/%Y/%m/%d', verbose_name='image')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articles', to='newsletter.message', verbose_name='message')),
            ],
            options={
                'verbose_name': 'article',
                'verbose_name_plural': 'articles',
                'ordering': ('sortorder',),
                'unique_together': {('post', 'sortorder')},
            },
        ),
    ]
